[
  {
    "id": "oauth2-flow",
    "type": "tab",
    "label": "Exercise 14: Implementing OAuth2 Authentication",
    "disabled": false,
    "info": "# Implementing OAuth2 Authentication\n\nThis flow demonstrates how to use OAuth2 for authenticating API requests in Node-RED.\n\n## Prerequisites\n1.  An OAuth2 provider (e.g., Google, Facebook, GitHub).\n2.  Client ID and client secret from the OAuth2 provider.\n3.  Authorization and token endpoints from the OAuth2 provider.\n\n## Configuration\n1.  Set the client ID, client secret, authorization endpoint, and token endpoint in the `OAuth2 Configuration` node.\n2.  Configure the HTTP In node with the desired endpoint and method.\n3.  Ensure that the client obtains an access token from the OAuth2 provider and sends it in the `Authorization` header (Bearer token).\n\n## Instructions\n1.  Import this flow into Node-RED.\n2.  Set the OAuth2 configuration in the `OAuth2 Configuration` node.\n3.  Deploy the flow.\n4.  Test the authenticated endpoint by sending an HTTP request with a valid access token in the `Authorization` header.",
    "env": []
  },
  {
    "id": "http-in-protected",
    "type": "http in",
    "z": "oauth2-flow",
    "name": "GET /protected",
    "url": "/protected",
    "method": "get",
    "swaggerDoc": "",
    "x": 150,
    "y": 160,
    "wires": [
      [
        "oauth2-verify",
        "http-response-success"
      ]
    ]
  },
  {
    "id": "oauth2-verify",
    "type": "function",
    "z": "oauth2-flow",
    "name": "Verify OAuth2 Token",
    "func": "// Implement OAuth2 token verification logic here\n// This is a placeholder and needs to be replaced with actual verification\n\nconst authHeader = msg.req.headers['authorization'];\nconst token = authHeader && authHeader.split(' ')[1];\n\nif (!token) {\n    msg.statusCode = 401;\n    msg.payload = { message: 'No token provided' };\n    return [null, msg];\n}\n\n// Replace this with actual OAuth2 token verification\nif (token === 'valid-token') {\n    msg.payload = { message: 'Access granted', user: { id: 1, name: 'Test User' } };\n    return [msg, null];\n} else {\n    msg.statusCode = 403;\n    msg.payload = { message: 'Invalid token' };\n    return [null, msg];\n}",
    "outputs": 2,
    "noerr": 0,
    "x": 350,
    "y": 160,
    "wires": [
      [
        "http-response-success"
      ],
      [
        "http-response-error"
      ]
    ],
    "outputLabels": [
      "Success",
      "Error"
    ]
  },
  {
    "id": "http-response-success",
    "type": "http response",
    "z": "oauth2-flow",
    "name": "Send Success Response",
    "statusCode": "200",
    "headers": {},
    "x": 580,
    "y": 100,
    "wires": []
  },
  {
    "id": "http-response-error",
    "type": "http response",
    "z": "oauth2-flow",
    "name": "Send Error Response",
    "statusCode": "",
    "headers": {},
    "x": 570,
    "y": 220,
    "wires": []
  },
  {
    "id": "comment-setup",
    "type": "comment",
    "z": "oauth2-flow",
    "name": "Setup Instructions",
    "info": "## Setup Instructions\n\n1.  Configure the HTTP In node with the desired endpoint and method.\n2.  Implement the OAuth2 token verification logic in the `Verify OAuth2 Token` node.\n3.  Ensure that the client obtains an access token from the OAuth2 provider and sends it in the `Authorization` header (Bearer token).\n\n## Example\n\nAuthorization: Bearer <your_access_token>",
    "x": 140,
    "y": 40,
    "wires": []
  },
  {
    "id": "oauth2-config",
    "type": "inject",
    "z": "oauth2-flow",
    "name": "OAuth2 Configuration",
    "props": [
      {
        "p": "clientId",
        "v": "your-client-id",
        "vt": "str"
      },
      {
        "p": "clientSecret",
        "v": "your-client-secret",
        "vt": "str"
      },
      {
        "p": "authorizationEndpoint",
        "v": "https://example.com/oauth2/authorize",
        "vt": "str"
      },
      {
        "p": "tokenEndpoint",
        "v": "https://example.com/oauth2/token",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": 0.1,
    "topic": "",
    "payloadType": "env",
    "x": 140,
    "y": 320,
    "wires": [
      []
    ]
  },
  {
    "id": "comment-oauth2",
    "type": "comment",
    "z": "oauth2-flow",
    "name": "OAuth2 Configuration",
    "info": "Set the OAuth2 configuration parameters as environment variables.  These are used to verify the OAuth2 token.",
    "x": 130,
    "y": 280,
    "wires": []
  }
]
