[
  {
    "id": "data-transformation-flow",
    "type": "tab",
    "label": "Exercise 11: Real-time Data Transformation",
    "disabled": false,
    "info": "# Real-time Data Transformation in Node-RED\n\nThis flow demonstrates how to transform data in real-time using Node-RED. It receives data from an MQTT topic, transforms it using a Function node, and publishes the transformed data to another MQTT topic.\n\n## Components Used\n- MQTT In node: To receive data from an MQTT topic.\n- Function node: To transform the data.\n- MQTT Out node: To publish the transformed data to another MQTT topic.\n\n## Instructions\n1. Import this flow into Node-RED.\n2. Configure the MQTT In and MQTT Out nodes with the appropriate broker settings and topics.\n3. Modify the Function node to perform the desired data transformation.\n4. Deploy the flow.\n5. Observe the transformed data being published to the output MQTT topic.",
    "env": []
  },
  {
    "id": "mqtt-in",
    "type": "mqtt in",
    "z": "data-transformation-flow",
    "name": "MQTT In",
    "topic": "workshop/input",
    "qos": "0",
    "datatype": "utf8",
    "broker": "mqtt-broker",
    "nl": false,
    "rap": true,
    "rh": 0,
    "x": 150,
    "y": 160,
    "wires": [
      [
        "function-transform"
      ]
    ]
  },
  {
    "id": "function-transform",
    "type": "function",
    "z": "data-transformation-flow",
    "name": "Transform Data",
    "func": "// Example: Convert temperature from Celsius to Fahrenheit\nlet celsius = parseFloat(msg.payload);\nlet fahrenheit = (celsius * 9/5) + 32;\nmsg.payload = fahrenheit.toFixed(2);\n\n// Example: Add a unit to the payload\nmsg.payload = msg.payload + \" Â°F\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 350,
    "y": 160,
    "wires": [
      [
        "mqtt-out"
      ]
    ]
  },
  {
    "id": "mqtt-out",
    "type": "mqtt out",
    "z": "data-transformation-flow",
    "name": "MQTT Out",
    "topic": "workshop/output",
    "qos": "0",
    "retain": false,
    "respTopic": "",
    "contentType": "",
    "userProps": "",
    "correl": "",
    "expiry": "",
    "broker": "mqtt-broker",
    "x": 550,
    "y": 160,
    "wires": []
  },
  {
    "id": "mqtt-broker",
    "type": "mqtt-broker",
    "name": "MQTT Broker",
    "broker": "localhost",
    "port": "1883",
    "clientid": "",
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "willTopic": "",
    "willQos": "0",
    "willPayload": ""
  },
  {
    "id": "comment-instructions",
    "type": "comment",
    "z": "data-transformation-flow",
    "name": "Instructions",
    "info": "This flow demonstrates real-time data transformation.\n\n1.  Configure the MQTT In node with the input topic.\n2.  Modify the Function node to perform the desired data transformation.\n3.  Configure the MQTT Out node with the output topic.\n\nIn this example, the Function node converts temperature from Celsius to Fahrenheit.",
    "x": 140,
    "y": 80,
    "wires": []
  }
]
